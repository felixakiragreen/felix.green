---
import { css } from 'ui/css'

import type { AstroInstance } from 'astro'

import type { Project, ProjectFacet } from '@/data/projects'

const project: Project = Astro.props.project

type ProjectFacetImages = {
	[key: string]: {
		facet: ProjectFacet
		image: () => Promise<AstroInstance>
	}
}
const projectFacetImages: ProjectFacetImages = project.facets.reduce(
	(acc, facet) => {
		let title = `project_${facet.type}_${facet.image}`

		acc[title] = {
			facet,
			image: () => import(`../assets/project/${title}.astro`),
		}

		return acc
	},
	{} as ProjectFacetImages,
)

// console.log('projectFacetImages', projectFacetImages)
---

<>
	{
		Object.entries(projectFacetImages).map(
			async ([key, { facet, image }]) => {
				const DynamicComponent = (await image()).default

				const url = Array.isArray(facet.url) ? facet.url[0] : facet.url

				if (url) {
					return (
						<a
							href={url}
							target="_blank"
							rel="noopener noreferrer"
							class={css({
								w: 32,
								h: 32,
								aspectRatio: 'square',
							})}
						>
							<DynamicComponent />
						</a>
					)
				} else {
					return (
						<div
							class={css({
								w: 32,
								h: 32,
								aspectRatio: 'square',
							})}
						>
							<DynamicComponent />
						</div>
					)
				}
			},
		)
	}
</>
