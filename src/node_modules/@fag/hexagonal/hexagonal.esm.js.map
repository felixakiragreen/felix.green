{"version":3,"file":"hexagonal.esm.js","sources":["../src/index.ts"],"sourcesContent":["type HexProps = {\n  w: number // width\n  h: number // height\n  x: number // translate X\n  y: number // translate Y\n  s: number // length of a side (radius of circumcircle)\n  m: number // mid point\n  a: number // length of tip\n  b: number // length of tip + body\n}\n\n// 60° degress\nconst α = Math.PI / 3\n\nexport const hexPropsFromInside = ({\n  height,\n  width,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  height: number\n  width: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w,\n    h,\n    insideWidthFromHeight,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  insideWidthFromHeight = height * Math.sin(α)\n\n  if (width < insideWidthFromHeight) {\n    w = width\n    h = w / Math.sin(α)\n  } else {\n    h = height\n    w = h * Math.sin(α)\n  }\n\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const hexPropsFromWidth = ({\n  width,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  width: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w = width,\n    h,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  h = w / Math.sin(α)\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const hexPropsFromHeight = ({\n  height,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  height: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w,\n    h = height,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  w = h * Math.sin(α)\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const createPath_hexFull = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n  b,\n}: HexProps): string => `\n  M ${x + m} ${y}\n  L ${x + m * 2} ${y + a}\n  L ${x + m * 2} ${y + b}\n  L ${x + m} ${y + a + b}\n  L ${x} ${y + b}\n  L ${x} ${y + a}\n  Z\n`\n\nexport const createPath_hexATip = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n}: // b,\nHexProps): string => `\n  M ${x} ${y + a}\n  L ${x + m} ${y}\n  L ${x + m * 2} ${y + a}\n  Z\n`\n\nexport const createPath_hexBTip = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n}: // b,\nHexProps): string => `\n  M ${x} ${y}\n  L ${x + m * 2} ${y}\n  L ${x + m} ${y + a}\n  Z\n`\n"],"names":["α","Math","PI","hexPropsFromInside","height","width","offsetX","offsetY","aTip","bBodyTip","w","h","insideWidthFromHeight","x","y","m","s","a","b","sin","hexPropsFromWidth","hexPropsFromHeight","createPath_hexFull","createPath_hexATip","createPath_hexBTip"],"mappings":"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"}