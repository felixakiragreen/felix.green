{"version":3,"file":"hexagonal.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["type HexProps = {\n  w: number // width\n  h: number // height\n  x: number // translate X\n  y: number // translate Y\n  s: number // length of a side (radius of circumcircle)\n  m: number // mid point\n  a: number // length of tip\n  b: number // length of tip + body\n}\n\n// 60° degress\nconst α = Math.PI / 3\n\nexport const hexPropsFromInside = ({\n  height,\n  width,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  height: number\n  width: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w,\n    h,\n    insideWidthFromHeight,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  insideWidthFromHeight = height * Math.sin(α)\n\n  if (width < insideWidthFromHeight) {\n    w = width\n    h = w / Math.sin(α)\n  } else {\n    h = height\n    w = h * Math.sin(α)\n  }\n\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const hexPropsFromWidth = ({\n  width,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  width: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w = width,\n    h,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  h = w / Math.sin(α)\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const hexPropsFromHeight = ({\n  height,\n  offsetX = 0,\n  offsetY = 0,\n  aTip,\n  bBodyTip,\n}: {\n  height: number\n  offsetX?: number\n  offsetY?: number\n  aTip?: number\n  bBodyTip?: number\n}): HexProps => {\n  let w,\n    h = height,\n    x = offsetX,\n    y = offsetY,\n    m,\n    s,\n    a = aTip,\n    b = bBodyTip\n\n  w = h * Math.sin(α)\n  m = w / 2\n  s = m / Math.sin(α)\n\n  if (!a) {\n    a = s / 2\n  }\n  if (!b) {\n    b = a + s\n  }\n\n  return {\n    x, // translate X\n    y, // translate Y\n    w, // width\n    h, // height\n    s, // length of a side (hexCircumRadius - radius of circumcircle)\n    m, // mid point (hexInRadius)\n    a, // length of tip\n    b, // length of tip + body\n  }\n}\n\nexport const createPath_hexFull = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n  b,\n}: HexProps): string => `\n  M ${x + m} ${y}\n  L ${x + m * 2} ${y + a}\n  L ${x + m * 2} ${y + b}\n  L ${x + m} ${y + a + b}\n  L ${x} ${y + b}\n  L ${x} ${y + a}\n  Z\n`\n\nexport const createPath_hexATip = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n}: // b,\nHexProps): string => `\n  M ${x} ${y + a}\n  L ${x + m} ${y}\n  L ${x + m * 2} ${y + a}\n  Z\n`\n\nexport const createPath_hexBTip = ({\n  x,\n  y,\n  // w,\n  // h,\n  // s,\n  m,\n  a,\n}: // b,\nHexProps): string => `\n  M ${x} ${y}\n  L ${x + m * 2} ${y}\n  L ${x + m} ${y + a}\n  Z\n`\n"],"names":["α","Math","PI","x","y","m","a","b","w","s","offsetX","offsetY","h","height","aTip","bBodyTip","sin","width"],"mappings":"oEAYA,IAAMA,EAAIC,KAAKC,GAAK,6BAwKc,gBAChCC,IAAAA,EACAC,IAAAA,EAIAC,IAAAA,EACAC,IAAAA,iBAGIH,OAAKC,EAAIE,aACTH,EAAIE,OAAKD,YACTD,EAAQ,EAAJE,QAASD,EAAIE,yCAIW,gBAChCH,IAAAA,EACAC,IAAAA,EAIAC,IAAAA,iBAIIF,MAAKC,YACLD,EAAQ,EAAJE,OAASD,YACbD,EAAIE,QAAKD,IALbE,yCA1CgC,gBAChCH,IAAAA,EACAC,IAAAA,EAIAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,kBAEIJ,EAAIE,OAAKD,YACTD,EAAQ,EAAJE,QAASD,EAAIE,aACjBH,EAAQ,EAAJE,QAASD,EAAIG,aACjBJ,EAAIE,QAAKD,EAAIE,EAAIC,YACjBJ,OAAKC,EAAIG,YACTJ,OAAKC,EAAIE,yCA5DmB,gBAa5BE,EAIFH,EACAI,MAhBFC,YACAC,QAWEC,IAbFC,OAcEV,aAbQ,IAcRC,aAbQ,IAgBRE,IAfFQ,KAgBEP,IAfFQ,gBAmBAN,GADAJ,GADAG,EAAII,EAAIX,KAAKe,IAAIhB,IACT,GACAC,KAAKe,IAAIhB,GAEZM,IACHA,EAAIG,EAAI,GAELF,IACHA,EAAID,EAAIG,GAGH,CACLN,EAAAA,EACAC,EAAAA,EACAI,EAAAA,EACAI,EAAAA,EACAH,EAAAA,EACAJ,EAAAA,EACAC,EAAAA,EACAC,EAAAA,+BA/I8B,gBAe5BC,EACFI,EAIAP,EACAI,EApBFI,IAAAA,OACAI,IAAAA,UACAP,YACAC,QAcER,aAfQ,IAgBRC,aAfQ,IAkBRE,IAjBFQ,KAkBEP,IAjBFQ,gBAqBIE,EAFoBJ,EAASZ,KAAKe,IAAIhB,GAIxCY,GADAJ,EAAIS,GACIhB,KAAKe,IAAIhB,GAGjBQ,GADAI,EAAIC,GACIZ,KAAKe,IAAIhB,GAInBS,GADAJ,EAAIG,EAAI,GACAP,KAAKe,IAAIhB,GAEZM,IACHA,EAAIG,EAAI,GAELF,IACHA,EAAID,EAAIG,GAGH,CACLN,EAAAA,EACAC,EAAAA,EACAI,EAAAA,EACAI,EAAAA,EACAH,EAAAA,EACAJ,EAAAA,EACAC,EAAAA,EACAC,EAAAA,8BAI6B,gBAc7BK,EAGAP,EACAI,MAhBFC,YACAC,QAUIH,IAZJS,MAcEd,aAbQ,IAcRC,aAbQ,IAgBRE,IAfFQ,KAgBEP,IAfFQ,gBAiBAH,EAAIJ,EAAIP,KAAKe,IAAIhB,GAEjBS,GADAJ,EAAIG,EAAI,GACAP,KAAKe,IAAIhB,GAEZM,IACHA,EAAIG,EAAI,GAELF,IACHA,EAAID,EAAIG,GAGH,CACLN,EAAAA,EACAC,EAAAA,EACAI,EAAAA,EACAI,EAAAA,EACAH,EAAAA,EACAJ,EAAAA,EACAC,EAAAA,EACAC,EAAAA"}